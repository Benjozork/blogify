@import "colours";
@import "layouts";

input, button, textarea, select {
    background-color: var(--card-bg);
}

input, textarea {
    color: var(--card-fg);

    padding: .65rem .9rem;

    border-radius: $std-border-radius;
    border: 1px solid var(--border-color);

    font-size: 1.15em;

    &.ng-invalid.ng-touched {
        border-color: var(--accent-negative);
    }
}

.file-upload-wrapper {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    row-gap: .2em;

    padding: .6em 0;

    background-color: var(--card-ct);
    color: var(--card-fg);

    cursor: pointer;

    border: 1px solid transparent;
    border-radius: $std-border-radius;

    box-shadow: $std-box-shadow;
}

button {

    padding: .6em .5em;

    cursor: pointer;

    color: var(--theme);
    background: var(--accent-neutral);

    border: 1px solid var(--accent-neutral);
    border-radius: $std-border-radius;

    font-size: 1.25em;
    font-weight: 600;

    // Disabled

    &.disabled {
        opacity: .6;
        pointer-events: none;
    }

    // Color classes

    &.neutral  { color: var(--theme); background-color: var(--accent-neutral) }
    &.positive { color: var(--theme); background-color: var(--accent-positive); }
    &.mild     { color: var(--theme); background-color: var(--accent-mild); }
    &.negative { color: var(--theme);; background-color: var(--accent-negative); }
    &.gray     { color: var(--theme); background-color: var(--accent-gray); }


    &:not(.hollow) {
        border-color: transparent;
    }

    // Shape classes

    &.small {
        padding: .25em .75em;
    }

    &.tiny {
        padding: .01em .65em;
        font-size: .75em;
    }

    &.hollow {
        background: none !important;
        color: var(--accent-neutral);
        border-width: 1px;
        border-style: solid;

        &.rounded { border-radius: 1.25em !important; }

        &.neutral  { color: var(--accent-neutral);  border-color: var(--accent-neutral) }
        &.positive { color: var(--accent-positive); border-color: var(--accent-positive); }
        &.mild     { color: var(--accent-mild);     border-color: var(--accent-mild); }
        &.negative { color: var(--accent-negative); border-color: var(--accent-negative); }
        &.gray     { color: var(--accent-gray);     border-color: var(--accent-gray); }
    }

    &.borderless {
        border: none;
        background: none;
    }

    &.rounded {
        border-radius: 1.15em;
        padding: .5em 1.15em;
        &.small { padding: .4em 1em; }
    }
}

*.clickable {

    cursor: pointer;

    &:not(.no-highlight) {
        &:not(.highlight-border) {
            &:hover, &:hover * { color: var(--accent-neutral); }
        }
        &.highlight-border {
            &:hover { border-color: var(--accent-neutral); }
        }
    }

    &:not(.highlight-border) {
        &:hover.hover-neutral  { &, & * {color: var(--accent-neutral);  } };
        &:hover.hover-positive { &, & * {color: var(--accent-positive); } };
        &:hover.hover-mild     { &, & * {color: var(--accent-mild);     } };
        &:hover.hover-negative { &, & * {color: var(--accent-negative); } };
        &:hover.hover-gray     { &, & * {color: var(--accent-gray);     } };
    }

    &.highlight-border {
        &:hover.hover-neutral  { & {border-color: var(--accent-neutral);  } };
        &:hover.hover-positive { & {border-color: var(--accent-positive); } };
        &:hover.hover-mild     { & {border-color: var(--accent-mild);     } };
        &:hover.hover-negative { & {border-color: var(--accent-negative); } };
        &:hover.hover-gray     { & {border-color: var(--accent-gray);     } };
    }

}

span.separator {
    width: 1px;

    margin-left: .85em !important;
    align-self: stretch;
    background-color: var(--header-ct);
}
